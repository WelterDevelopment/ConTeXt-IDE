<Page
    x:Class="ConTeXt_UWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ConTeXt_UWP"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:models="using:ConTeXt_UWP.Models"
    xmlns:helpers="using:ConTeXt_UWP.Helpers"
    xmlns:monaco="using:Monaco"
    mc:Ignorable="d" DataContext="{x:Bind VM}" RequestedTheme="{Binding Default.Theme, Converter={StaticResource StringToTheme}}" Background="{ThemeResource AcrylicColor}" >
    <Page.Resources>
        <DataTemplate x:Key="FolderTemplate" x:DataType="models:FileItem">
            <models:MyTreeViewItem IsExpanded="{Binding IsExpanded, Mode=TwoWay}" CanDrag="False" ToolTipService.ToolTip="{Binding FileName}" HorizontalContentAlignment="Left" ItemsSource="{x:Bind Children}">
                <models:MyTreeViewItem.ContextFlyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuFlyoutItem x:Name="NewFile" Icon="Add" Click="NewFile_Click" Text="New File"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="NewFolder" Icon="Add" Click="NewFolder_Click"  Text="New Folder"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="Delete" Icon="Delete" Click="Delete_Click" Text="Delete"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="Rename" Icon="Rename" Click="Rename_Click" Text="Rename"></MenuFlyoutItem>
                    </MenuFlyout>
                </models:MyTreeViewItem.ContextFlyout>
                <StackPanel Margin="0" Orientation="Horizontal">
                    <SymbolIcon Width="20" Symbol="Folder"></SymbolIcon>
                    <TextBlock Text="{Binding FileName, Mode=OneWay}"/>
                </StackPanel>
            </models:MyTreeViewItem>
        </DataTemplate>

        <DataTemplate x:Key="FileTemplate" x:DataType="models:FileItem">
            <models:MyTreeViewItem Margin="0,0,0,0" ToolTipService.ToolTip="{Binding FileName}" >
                <models:MyTreeViewItem.ContextFlyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuFlyoutItem Visibility="{Binding Source={StaticResource VM}, Path=Default.DistributionInstalled, Converter={StaticResource BoolToVisibility}}" x:Name="CompileFlyoutButton" Icon="Play" Click="Compile_Click" Text="Compile"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="SetRoot" Icon="Favorite" Click="SetRoot_Click" IsEnabled="{Binding IsRoot, Converter={StaticResource BoolInverter}}" Text="Set as Main File"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="Delete" Icon="Delete" Click="Delete_Click" IsEnabled="{Binding IsRoot, Converter={StaticResource BoolInverter}}" Text="Delete"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="Rename" Icon="Rename" Click="Rename_Click" Text="Rename"></MenuFlyoutItem>
                    </MenuFlyout>
                </models:MyTreeViewItem.ContextFlyout>
                <animations:Implicit.Animations>
                    <animations:TranslationAnimation Duration="0:0:0.25" From="-50, 0, 0" To="0" ></animations:TranslationAnimation>
                    <animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
                </animations:Implicit.Animations>
                <StackPanel Margin="0" Orientation="Horizontal">
                    <!--<Image Width="20" Source="Assets/file.png"/>-->
                    <SymbolIcon Width="20" Symbol="Document"></SymbolIcon>
                    <TextBlock Text="{Binding FileName, Mode=OneWay}" FontWeight="{Binding IsRoot, Converter={StaticResource BoolToFontWeight}}" />
                </StackPanel>
            </models:MyTreeViewItem>
        </DataTemplate>

        <DataTemplate x:Key="ProjectFolderTemplate" x:DataType="models:FileItem">
            <models:MyTreeViewItem CanDrag="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ToolTipService.ToolTip="{Binding File.Path}" IsExpanded="{Binding IsExpanded, Mode=TwoWay}" ItemsSource="{x:Bind Children}">
                <models:MyTreeViewItem.ContextFlyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuFlyoutItem x:Name="NewFile" Icon="Add" Click="NewFile_Click" Text="New File"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="NewFolder" Icon="Add" Click="NewFolder_Click"  Text="New Folder"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="Unload" Icon="Undo" Click="Unload_Click" Text="Unload"></MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="ViewInExplorer" Icon="OpenFile" Click="OpeninExplorer_Click" Text="Open in Explorer"></MenuFlyoutItem>
                    </MenuFlyout>
                </models:MyTreeViewItem.ContextFlyout>
                <Grid HorizontalAlignment="Stretch" ColumnSpacing="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <FontIcon Grid.Column="0" Glyph="&#xE838;"></FontIcon>
                    <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" MaxLines="2" FontWeight="Bold" Text="{Binding FileName, Mode=OneWay}"/>
                    <Button x:Uid="CreateFile" ToolTipService.ToolTip="Create file" VerticalAlignment="Center" IsEnabled="{Binding Source={StaticResource VM}, Path=IsProjectLoaded}"  Grid.Column="2"  Click="AddFile_Click">
                        <SymbolIcon Symbol="Document"/>
                    </Button>
                    <Button x:Uid="CreateFolder" ToolTipService.ToolTip="Create folder" VerticalAlignment="Center" IsEnabled="{Binding Source={StaticResource VM}, Path=IsProjectLoaded}"  Grid.Column="3" Click="AddFolder_Click">
                        <SymbolIcon Symbol="Folder"/>
                    </Button>
                </Grid>
            </models:MyTreeViewItem>
        </DataTemplate>

        <models:ExplorerItemTemplateSelector
            x:Key="ExplorerItemTemplateSelector"
            FolderTemplate="{StaticResource FolderTemplate}"
            FileTemplate="{StaticResource FileTemplate}"
            ProjectFolderTemplate="{StaticResource ProjectFolderTemplate}"
            />
    </Page.Resources>

    <Grid x:Name="RootGrid" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <winui:TabView Grid.Row="0" Foreground="White" IsAddTabButtonVisible="False" CanDragTabs="False" CanReorderTabs="False"  TabWidthMode="SizeToContent" x:Name="MainRibbon" Background="{ThemeResource AccentColorAcrylicBrush}">
            <winui:TabView.TabStripHeader>
                <Grid x:Name="TabStripHeader" Background="Transparent">
                    <Button VerticalAlignment="Bottom" Margin="0,-4,0,-4" FontSize="18"  BorderThickness="0" CornerRadius="0" Padding="6" Content="ConTeXt IDE" Foreground="White" Background="Transparent">
                        <Button.Flyout >
                            <MenuFlyout Placement="Bottom">
                                <MenuFlyoutItem x:Uid="About" ToolTipService.ToolTip="About this app" Text="About" Click="TitleButton_Click">
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Help" ></SymbolIcon>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="Update" Text="Update ConTeXt" Click="Update_Click" Visibility="{Binding Default.DistributionInstalled, Converter={StaticResource BoolToVisibility}}" IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" ToolTipService.ToolTip="Updates the ConTeXt Distribution">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xECC5;" ></FontIcon>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="Rate" Text="Rate this app" Click="Rate_Click" ToolTipService.ToolTip="Feel free to also use your review to communicate feature requests and bug reports!">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE734;" ></FontIcon>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="Github" Text="View in GitHub" Click="Github_Click" ToolTipService.ToolTip="View the source code, commit changes and write feature requests and bug reports.">
                                    <MenuFlyoutItem.Icon>
                                        <BitmapIcon Foreground="{ThemeResource ForegroundColor}" UriSource="ms-appx:///Assets/GitHub.png" ></BitmapIcon>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                            
                        </Button.Flyout>
                    </Button>
                </Grid>
            </winui:TabView.TabStripHeader>

            <winui:TabView.TabStripFooter>
                <Grid x:Name="TabStripFooter" Background="Transparent" />
            </winui:TabView.TabStripFooter>

            <winui:TabViewItem IsClosable="False" Foreground="White" ToolTipService.ToolTip="Start: Save, compile, set parameters">
                <winui:TabViewItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon  Glyph="&#xE768;"></FontIcon>
                        <TextBlock  Text="Start"></TextBlock>
                    </StackPanel>
                </winui:TabViewItem.Header>
                <ScrollViewer Style="{StaticResource RibbonView}">
                    <StackPanel Style="{StaticResource RibbonContent}">
                        <StackPanel Orientation="Horizontal" Spacing="0" Visibility="{Binding IsFileItemLoaded, Converter={StaticResource BoolToVisibility}}">
                            <Button CornerRadius="2,0,0,2"  IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" Name="btnsave"  Click="Btnsave_Click" ToolTipService.ToolTip="Save current file">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <SymbolIcon Symbol="Save"></SymbolIcon>
                                        <TextBlock x:Uid="Save" Text="Save" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button CornerRadius="0,2,2,0" IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" Name="btnsaveall"  Click="btnsaveall_Click" ToolTipService.ToolTip="Save all opened files">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xEA35;"></FontIcon>
                                        <TextBlock x:Uid="Saveall" Text="Save all" VerticalAlignment="Center" ></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" Spacing="0">
                            <Button x:Name="Root" CornerRadius="{x:Bind Current.Visibility, Mode=OneWay, Converter={StaticResource VisibilityToCornerRadius}, ConverterParameter=right}" Visibility="{Binding CurrentProject.RootFile, Converter={StaticResource StringToVisibility}}" ToolTipService.ToolTip="Save all &amp; Compile root file" IsEnabled="{Binding IsSaving, Mode=OneWay, Converter={StaticResource BoolInverter}}"  Click="Btncompileroot_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon Glyph="&#xF5B0;"></FontIcon>
                                        <TextBlock x:Uid="Root" Text="Root" VerticalAlignment="Center" ></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button x:Name="Current" CornerRadius="{x:Bind Root.Visibility, Mode=OneWay, Converter={StaticResource VisibilityToCornerRadius}, ConverterParameter=left}" Visibility="{Binding IsFileItemLoaded, Converter={StaticResource BoolToVisibility}}" IsEnabled="{Binding IsSaving, Mode=OneWay, Converter={StaticResource BoolInverter}}" ToolTipService.ToolTip="Save &amp; Compile current file"   Click="Btncompile_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <SymbolIcon Symbol="Play"></SymbolIcon>
                                        <TextBlock x:Uid="Current" Text="Current" VerticalAlignment="Center" ></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Spacing="0" Visibility="{Binding IsProjectLoaded, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                            <ToggleButton Click="Modes_Click" CornerRadius="2,0,0,2" IsChecked="{Binding Default.UseModes, Mode=TwoWay}">
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xE9D5;"></FontIcon>
                                        <TextBlock x:Uid="ContextModes" Text="Modes" ></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <winui:DropDownButton x:Uid="Modes" CornerRadius="0,2,2,0"  x:Name="Modes" ToolTipService.ToolTip="Select compile modes" IsEnabled="{Binding Default.UseModes,Mode=OneWay}" >
                                <winui:DropDownButton.Flyout>
                                    <Flyout x:Name="ModeFlyout" Placement="Bottom">
                                        <StackPanel Orientation="Vertical" Spacing="6">
                                            <Button  Click="addMode_Click" ToolTipService.ToolTip="Add a Mode" >
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <SymbolIcon Symbol="Add"></SymbolIcon>
                                                        <TextBlock x:Uid="Addmode" Text="Add mode" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                            <ListView SelectionMode="None" ItemsSource="{Binding CurrentProject.Modes}" >
                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected, Mode=TwoWay}" Checked="CheckBox_Checked">
                                                            <CheckBox.ContextFlyout>
                                                                <MenuFlyout>
                                                                    <MenuFlyoutItem x:Uid="Reemovemode" x:Name="RemoveMode" Icon="Delete" Click="RemoveMode_Click" Text="Remove mode"></MenuFlyoutItem>
                                                                </MenuFlyout>
                                                            </CheckBox.ContextFlyout>
                                                        </CheckBox>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>
                                        </StackPanel>
                                    </Flyout>
                                </winui:DropDownButton.Flyout>
                            </winui:DropDownButton>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Spacing="0" Visibility="{Binding IsProjectLoaded, Converter={StaticResource BoolToVisibility}}">
                            <ToggleButton CornerRadius="2,0,0,2" IsChecked="{Binding Default.UseParameters, Mode=TwoWay}">
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xEC7A;"></FontIcon>
                                        <TextBlock x:Uid="ContextParameters" Text="Parameters" ></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <TextBox CornerRadius="0,2,2,0" IsEnabled="{Binding Default.UseParameters}" Text="{Binding Default.AdditionalParameters, Mode=TwoWay}"></TextBox>
                        </StackPanel>

                        <TextBlock x:Uid="CompilerPlaceholder" Visibility="{Binding IsProjectLoaded, Converter={StaticResource BoolToInvisibility}}" Text="Open a project folder to start compiling!"  Foreground="{ThemeResource ForegroundLightColor}"></TextBlock>
                    </StackPanel>
                </ScrollViewer>
            </winui:TabViewItem>

            <winui:TabViewItem IsClosable="False" ToolTipService.ToolTip="Editor: Change the editor's appearance and behaviour">
                <winui:TabViewItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon  Glyph="&#xE70F;"></FontIcon>
                        <TextBlock  Text="Editor"></TextBlock>
                    </StackPanel>
                </winui:TabViewItem.Header>
                <ScrollViewer Style="{StaticResource RibbonView}">
                    <StackPanel Style="{StaticResource RibbonContent}">
                        <TextBlock x:Uid="LineNumbers" Style="{StaticResource RibbonTextBlock}" Text="Line numbers:"></TextBlock>
                        <ComboBox CornerRadius="0,2,2,0" ItemsSource="{Binding Default.ShowLineNumberOptions}" SelectionChangedTrigger="Always" SelectedItem="{Binding Default.ShowLineNumbers, Mode=TwoWay}"  FontFamily="Segoe UI"/>
                        <!--<CheckBox Content="Text wrapping (prevents horizontal scrollbar)" IsChecked="{Binding Default.wrap, Mode=TwoWay}"/>-->
                        <!--<CheckBox Content="Show command info on hover" IsChecked="{Binding Default.ShowLineNumbers, Mode=TwoWay}"/>-->
                        <ToggleButton IsChecked="{Binding Default.CodeFolding, Mode=TwoWay}">
                            <ToggleButton.Content>
                                <StackPanel Orientation="Horizontal" >
                                    <FontIcon Glyph="&#xE974;"></FontIcon>
                                    <TextBlock x:Uid="CodeFolding" Text="Code folding" ></TextBlock>
                                </StackPanel>
                            </ToggleButton.Content>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Default.MiniMap, Mode=TwoWay}">
                            <ToggleButton.Content>
                                <StackPanel Orientation="Horizontal" >
                                    <FontIcon Glyph="&#xE7C4;"></FontIcon>
                                    <TextBlock x:Uid="Minimap" Text="Minimap" ></TextBlock>
                                </StackPanel>
                            </ToggleButton.Content>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Default.Hover, Mode=TwoWay}">
                            <ToggleButton.Content>
                                <StackPanel Orientation="Horizontal" >
                                    <FontIcon Glyph="&#xE7C9;"></FontIcon>
                                    <TextBlock x:Uid="HoverInfo" Text="Hover info" ></TextBlock>
                                </StackPanel>
                            </ToggleButton.Content>
                        </ToggleButton>

                        <winui:DropDownButton x:Uid="Suggestions" Content="Suggestions" ToolTipService.ToolTip="Enable code compleation and snippets" >
                            <winui:DropDownButton.Flyout>
                                <Flyout  Placement="Bottom">
                                    <StackPanel Orientation="Vertical" >
                                        <CheckBox x:Uid="S1" Content="ConTeXt sart-stop environments" IsChecked="{Binding Default.SuggestStartStop, Mode=TwoWay}"/>
                                        <CheckBox x:Uid="S2" Content="ConTeXt commands" IsChecked="{Binding Default.SuggestCommands, Mode=TwoWay}"/>
                                        <CheckBox x:Uid="S3" Content="TeX primitives" IsChecked="{Binding Default.SuggestPrimitives, Mode=TwoWay}"/>
                                    </StackPanel>
                                </Flyout>
                            </winui:DropDownButton.Flyout>
                        </winui:DropDownButton>

                        <Border Style="{StaticResource Separator}" ></Border>

                        <StackPanel Orientation="Horizontal" Spacing="0">
                            <Button  ToolTipService.ToolTip="Open a Manual" CornerRadius="2,0,0,2">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <SymbolIcon Symbol="Help"></SymbolIcon>
                                        <TextBlock x:Uid="Help" Text="Help" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                                    </StackPanel>

                                </Button.Content>
                                <Button.Flyout>
                                    <Flyout>
                                        <ListView  SelectionMode="None" IsItemClickEnabled="True" ItemClick="Help_ItemClick" ItemsSource="{Binding HelpFiles}" >
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Margin="0,0,0,6" Spacing="0">
                                                        <TextBlock Text="{Binding FriendlyName}" Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
                                                        <TextBlock Text="{Binding FileName}" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                            <ToggleButton x:Uid="HelpOpenInternal" ToolTipService.ToolTip="Open ConTeXt Manuals in the internal viewer" IsChecked="{Binding Default.HelpPDFInInternalViewer, Mode=TwoWay}" IsEnabled="{Binding Default.InternalViewer, Mode=OneWay}" CornerRadius="0,2,2,0">
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xE89F;"></FontIcon>
                                        <TextBlock x:Uid="OpenInternal" Text="Open internal" ></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                        </StackPanel>
                    </StackPanel>

                </ScrollViewer>
            </winui:TabViewItem>

            <winui:TabViewItem IsClosable="False" ToolTipService.ToolTip="Output: Change what should happen after compile">
                <winui:TabViewItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon  Glyph="&#xE945;"></FontIcon>
                        <TextBlock x:Uid="Output" Text="Output"></TextBlock>
                    </StackPanel>
                </winui:TabViewItem.Header>
                <ScrollViewer Style="{StaticResource RibbonView}">
                    <StackPanel Style="{StaticResource RibbonContent}">
                        <StackPanel Orientation="Horizontal" Spacing="0">
                            <ToggleButton CornerRadius="2,0,0,2" IsChecked="{Binding Default.AutoOpenPDF, Mode=TwoWay}" >
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xEA90;"></FontIcon>
                                        <TextBlock x:Uid="AutoOpenPDF" Text="Auto-open PDF file"></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <ToggleButton CornerRadius="0,2,2,0" IsChecked="{Binding Default.InternalViewer, Mode=TwoWay}" >
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xE89F;"></FontIcon>
                                        <TextBlock x:Uid="PDFInternalViewer" Text="open internally"></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                        </StackPanel>

                        <Border Style="{StaticResource Separator}" ></Border>
                        <StackPanel Orientation="Horizontal" Spacing="0">
                            <ToggleButton CornerRadius="2,0,0,2" IsChecked="{Binding Default.AutoOpenLOG, Mode=TwoWay}">
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xEA37;"></FontIcon>
                                        <TextBlock x:Uid="AutoOpenLog" Text="Auto-open LOG file"></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <ToggleButton  CornerRadius="0,2,2,0" IsEnabled="{Binding Default.AutoOpenLOG}" IsChecked="{Binding Default.AutoOpenLOGOnlyOnError, Mode=TwoWay}" >
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xE783;"></FontIcon>
                                        <TextBlock x:Uid="OnlyOnError" Text="only on error"></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </winui:TabViewItem>

            <winui:TabViewItem IsClosable="False" ToolTipService.ToolTip="View: Change the appearance of this app">
                <winui:TabViewItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon  Glyph="&#xF246;"></FontIcon>
                        <TextBlock x:Uid="View" Text="View"></TextBlock>
                    </StackPanel>
                </winui:TabViewItem.Header>
                <ScrollViewer Style="{StaticResource RibbonView}">
                    <StackPanel Style="{StaticResource RibbonContent}">
                        <TextBlock x:Uid="Theme" Style="{StaticResource RibbonTextBlock}" Text="Theme:"></TextBlock>
                        <ComboBox SelectionChanged="ThemeControl_SelectionChanged" ItemsSource="{Binding Default.ThemeOption}" SelectionChangedTrigger="Always" SelectedItem="{Binding Default.Theme, Mode=TwoWay}"  FontFamily="Segoe UI"/>

                        <Border Style="{StaticResource Separator}" ></Border>

                        <StackPanel Orientation="Horizontal" Spacing="0">
                            <ToggleButton CornerRadius="2,0,0,2" IsChecked="{Binding Default.ShowProjectPane, Mode=TwoWay}" >
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xEA49;"></FontIcon>
                                        <TextBlock x:Uid="ShowProject" Text="Project pane"></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <ToggleButton CornerRadius="0,2,2,0" IsEnabled="{Binding Default.ShowProjectPane, Mode=OneWay}" IsChecked="{Binding Default.ShowProjects, Mode=TwoWay}" >
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal" >
                                        <FontIcon Glyph="&#xE838;"></FontIcon>
                                        <TextBlock x:Uid="ShowProjects" Text="Projects"></TextBlock>
                                    </StackPanel>
                                </ToggleButton.Content>
                            </ToggleButton>
                        </StackPanel>

                        <ToggleButton IsChecked="{Binding Default.ShowLog, Mode=TwoWay}" >
                            <ToggleButton.Content>
                                <StackPanel Orientation="Horizontal" >
                                    <FontIcon Glyph="&#xEA37;"></FontIcon>
                                    <TextBlock x:Uid="ShowLog" Text="Application log"></TextBlock>
                                </StackPanel>
                            </ToggleButton.Content>
                        </ToggleButton>

                        <Border Style="{StaticResource Separator}" ></Border>

                        <ToggleButton IsChecked="{Binding Default.StartWithLastActiveProject, Mode=TwoWay}">
                            <ToggleButton.Content>
                                <StackPanel Orientation="Horizontal" >
                                    <FontIcon Glyph="&#xE81C;"></FontIcon>
                                    <TextBlock x:Uid="AutoOpenProject" Text="Auto-open last project"></TextBlock>
                                </StackPanel>
                            </ToggleButton.Content>
                        </ToggleButton>
                    </StackPanel>
                </ScrollViewer>
            </winui:TabViewItem>

        </winui:TabView>

        <Grid Grid.Row="1" x:Name="ContentGrid" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ContentGridProjectPaneColumn" Width="{Binding Default.ShowProjectPane, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=300}"></ColumnDefinition>
                <ColumnDefinition x:Name="ContentGridSplitter" Width="{Binding Default.ShowProjectPane, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=6}"></ColumnDefinition>
                <ColumnDefinition x:Name="ContentGridMainGridColumn" Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid x:Name="ProjectsGrid" Visibility="{Binding Default.ShowProjectPane, Converter={StaticResource BoolToVisibility}}">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="ProjectsGridCurrentRow" Height="*"></RowDefinition>
                    <RowDefinition x:Name="ProjectsGridSplitter" Height="{Binding Default.ShowProjects, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=6}"></RowDefinition>
                    <RowDefinition x:Name="ProjectsGridLibraryRow" Height="{Binding Default.ShowProjects, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=300}"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid x:Name="ProjectsGridCurrent" Grid.Row="0" Style="{StaticResource GridCell}" Margin="0,6,6,6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <animations:Implicit.ShowAnimations>
                        <animations:TranslationAnimation Duration="0:0:0.25" From="-50, 0, 0" To="0" ></animations:TranslationAnimation>
                        <animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
                    </animations:Implicit.ShowAnimations>
                    <!--<Grid Grid.Row="0" ColumnSpacing="6" x:Name="CurrentProjectHeaderGrid" Visibility="{Binding IsProjectLoaded}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock RightTapped="CurrentProject_RightTapped" ToolTipService.ToolTip="{Binding CurrentProject.Folder.Path}"  Grid.Column="0" Text="{Binding CurrentProject.Name}" Style="{ThemeResource BaseTextBlockStyle}" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <FlyoutBase.AttachedFlyout>
                                    <MenuFlyout Placement="Bottom">
                                        <MenuFlyoutItem Icon="OpenLocal" Text="Open in Explorer" x:Uid="OpeninExplorer" Click="OpeninExplorer_Click" />
                                        <MenuFlyoutItem Icon="Undo" Text="Unload" x:Uid="Unload" Click="Unload_Click" />
                                    </MenuFlyout>
                                </FlyoutBase.AttachedFlyout>
                        </TextBlock>
                        <Button x:Uid="CreateFile" ToolTipService.ToolTip="Create file" VerticalAlignment="Center" IsEnabled="{Binding IsProjectLoaded}"  Grid.Column="1"  Click="AddFile_Click">
                            <SymbolIcon Symbol="Document"/>
                        </Button>
                        <Button x:Uid="CreateFolder" ToolTipService.ToolTip="Create folder" VerticalAlignment="Center" IsEnabled="{Binding IsProjectLoaded}"  Grid.Column="2" Click="AddFolder_Click">
                            <SymbolIcon Symbol="Folder"/>
                        </Button>
                    </Grid>-->
                    <winui:TreeView Padding="-24,0,0,0" Grid.Row="0" SelectionMode="None" ItemInvoked="NavigationTree_ItemInvoked"  ScrollViewer.VerticalScrollBarVisibility="Auto"  ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}" ItemsSource="{Binding CurrentProject.Directory, Mode=OneWay}" 
                      CanReorderItems="False" AllowDrop="False" DragItemsStarting="TreeView_DragItemsStarting" DragItemsCompleted="TreeView_DragItemsCompleted" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" />
                </Grid>

                <toolkit:GridSplitter Grid.Row="1" Visibility="{Binding Default.ShowProjects, Converter={StaticResource BoolToVisibility}}"/>

                <Grid x:Name="ProjectsGridLibrary" Grid.Row="2" Style="{StaticResource GridCell}" Visibility="{Binding Default.ShowProjects, Converter={StaticResource BoolToVisibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <animations:Implicit.ShowAnimations>
                        <animations:TranslationAnimation Duration="0:0:0.25" From="-50, 50, 0" To="0" ></animations:TranslationAnimation>
                        <animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
                    </animations:Implicit.ShowAnimations>
                    <Button x:Uid="AddProject" HorizontalAlignment="Right" Grid.Row="0" x:Name="Btnaddproject" Click="Btnaddproject_Click" ToolTipService.ToolTip="Open a project folder">
                        <Button.Content>
                            <SymbolIcon Symbol="Add"></SymbolIcon>
                        </Button.Content>
                    </Button>
                    <TextBlock Grid.Row="0" HorizontalAlignment="Left" x:Uid="Projects" Text="Projects" Style="{ThemeResource BaseTextBlockStyle}" FontWeight="Bold"></TextBlock>
                    <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" HorizontalScrollMode="Disabled">
                        <ItemsControl Margin="6,0,0,0" ItemsSource="{Binding Default.ProjectList, Mode=OneWay}">
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" Padding="{TemplateBinding Padding}">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,6,0,0" ColumnSpacing="6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <!--<TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Text="{Binding Name}" Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>-->
                                        <TextBlock Grid.Column="0" Text="{Binding Name}" TextWrapping="Wrap" VerticalAlignment="Center" ToolTipService.ToolTip="{Binding Folder.Path}"></TextBlock>
                                        <Button VerticalAlignment="Center" x:Uid="OpenProject" ToolTipService.ToolTip="Open project" Click="BtnLoad_Click" Grid.Column="1" >
                                            <Button.Content>
                                                <FontIcon Glyph="&#xE8DA;"></FontIcon>
                                            </Button.Content>
                                        </Button>
                                        <Button Margin="0,0,1,0" VerticalAlignment="Center" x:Uid="RemoveProject" ToolTipService.ToolTip="Remove project from this app" Name="Btndeleteproject" Click="Btndeleteproject_Click" Grid.Column="2" >
                                            <Button.Content>
                                                <SymbolIcon Symbol="Delete"></SymbolIcon>
                                            </Button.Content>
                                        </Button>

                                        <!--<TreeView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding Directory}" ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}" 
                            HorizontalAlignment="Left" VerticalAlignment="Top" SelectionMode="None" CanDragItems="False" AllowDrop="False" />-->
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Grid>
            <toolkit:GridSplitter Grid.Column="1"/>
            <Grid x:Name="MainGrid"  Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="IDEGridRow" Height="2*"></RowDefinition>
                    <RowDefinition x:Name="LogGridSplitter" Height="{Binding Default.ShowLog, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=6}"></RowDefinition>
                    <RowDefinition x:Name="LogGridRow" Height="{Binding Default.ShowLog, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=200}"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid x:Name="IDEGrid" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="EditorGridColumn" Width="*"></ColumnDefinition>
                        <ColumnDefinition x:Name="PDFGridSplitter" Width="{Binding Default.InternalViewer, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=6}"></ColumnDefinition>
                        <ColumnDefinition x:Name="PDFGridColumn" Width="{Binding Default.InternalViewer, Mode=OneWay, Converter={StaticResource BoolToWidth}, ConverterParameter=400}"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="EditGrid" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <winui:ProgressBar  Grid.Row="0" VerticalAlignment="Center" Visibility="{Binding IsVisible, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" ShowPaused="{Binding IsPaused}" HorizontalAlignment="Stretch"  IsIndeterminate="True" ShowError="{Binding IsError}">
                            <animations:Implicit.ShowAnimations>
                                <animations:OpacityAnimation Duration="0:0:0.5" From="0" To="1"></animations:OpacityAnimation>
                            </animations:Implicit.ShowAnimations>
                            <animations:Implicit.HideAnimations>
                                <animations:OpacityAnimation Duration="0:0:0.5" From="1" To="0"></animations:OpacityAnimation>
                            </animations:Implicit.HideAnimations>
                        </winui:ProgressBar>
                        <Grid Margin="6,6,6,0" CornerRadius="2" Background="#33fff700" x:Name="ErrorGrid" Grid.Row="1" Visibility="{Binding IsError, Converter={StaticResource BoolToVisibility}}">
                            <ScrollViewer MaxHeight="200" HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                                <Grid  Padding="6,6,6,6"  ColumnSpacing="6" >
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Top"></Setter>
                                            <Setter Property="TextWrapping" Value="WrapWholeWords"></Setter>
                                            <Setter Property="Margin" Value="0,4,0,0"></Setter>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" ColumnSpacing="6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0" Text="Lua error:" Visibility="{Binding ConTeXtErrorMessage.lastluaerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding ConTeXtErrorMessage.lastluaerror}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lastluaerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="1" Text="TeX error:" Visibility="{Binding ConTeXtErrorMessage.lasttexerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ConTeXtErrorMessage.lasttexerror}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lasttexerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="2" Text="Error at:" Visibility="{Binding ConTeXtErrorMessage.lastcontext, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding ConTeXtErrorMessage.lastcontext}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lastcontext, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="3" Text="TeX error help:" Visibility="{Binding ConTeXtErrorMessage.lasttexhelp, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding ConTeXtErrorMessage.lasttexhelp}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lasttexhelp, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                    </Grid>
                                    <Grid Grid.Column="1" ColumnSpacing="6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0" Text="File:"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding ConTeXtErrorMessage.filename}" IsTextSelectionEnabled="True"></TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="1" Text="Line number:"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ConTeXtErrorMessage.linenumber}" IsTextSelectionEnabled="True"></TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="2" Text="Lua error line:" Visibility="{Binding ConTeXtErrorMessage.luaerrorline, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding ConTeXtErrorMessage.luaerrorline}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.luaerrorline, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="3" Text="Offset:"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding ConTeXtErrorMessage.offset}" IsTextSelectionEnabled="True"></TextBlock>
                                    </Grid>
                                </Grid>
                            </ScrollViewer>
                        </Grid>

                        <!--<monaco:CodeEditor Grid.Row="3" Options="{Binding EditorOptions, Mode=OneWay}" RequestedTheme="{Binding Default.Theme, Mode=OneWay, Converter={StaticResource StringToTheme}}" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"   x:Name="Edit" Loading="Edit_Loading" Text="{Binding CurrentFileItem.FileContent,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CodeLanguage="{Binding CurrentFileItem.FileLanguage, Mode=OneWay}">

                        </monaco:CodeEditor>-->
                        <winui:TabView x:Name="Tabs" Grid.Row="3" RequestedTheme="{Binding Default.Theme, Mode=OneWay, Converter={StaticResource StringToTheme}}"
                       TabWidthMode="Compact"  IsAddTabButtonVisible="False" CacheMode="BitmapCache"
                      CloseButtonOverlayMode="Always" 
                   TabCloseRequested="Tabs_TabCloseRequested" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
                      CanDragTabs="True" Background="Transparent"
                      CanReorderTabs="True" TabItemsSource="{Binding FileItems}" SelectedItem="{Binding CurrentFileItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      AllowDrop="True" TabStripDragOver="EditorTabViewDrag" TabStripDrop="EditorTabViewDrop" DragOver="EditorTabViewDrag" Drop="EditorTabViewDrop" FontFamily="Segoe">
                            <winui:TabView.Resources>
                                <!--<SolidColorBrush x:Key="TabViewItemHeaderBackgroundSelected"
                             Color="{StaticResource SystemChromeMediumColor}" />
                    <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPointerOver"
                             Color="{StaticResource SystemChromeMediumLowColor}" />
                    <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPressed"
                             Color="{StaticResource SystemChromeMediumLowColor}" />-->
                                <x:Double x:Key="TabViewItemHeaderMinHeight">32</x:Double>
                                <x:Double x:Key="TabViewItemHeaderMinWidth">90</x:Double>
                                <x:Double x:Key="TabViewItemHeaderMaxWidth">200</x:Double>
                            </winui:TabView.Resources>
                            <winui:TabView.TabItemTemplate>
                                <DataTemplate x:DataType="models:FileItem">
                                    <winui:TabViewItem Content="{Binding}" IsClosable="True">
                                        <winui:TabViewItem.ContextFlyout>
                                            <MenuFlyout>
                                                <MenuFlyoutItem Visibility="{Binding Source={StaticResource VM}, Path=Default.DistributionInstalled, Converter={StaticResource BoolToVisibility}}" x:Name="CompileFlyoutButton" Icon="Play" Click="Compile_Click" Text="Compile"></MenuFlyoutItem>
                                                <MenuFlyoutItem x:Name="SetRoot" Icon="Favorite" Click="SetRoot_Click" IsEnabled="{Binding IsRoot, Converter={StaticResource BoolInverter}}" Text="Set as Main File"></MenuFlyoutItem>
                                                <MenuFlyoutItem x:Name="Save" Icon="Save" Click="Save_Click" IsEnabled="{Binding IsChanged}" Text="Save"></MenuFlyoutItem>
                                                <MenuFlyoutItem x:Name="Rename" Icon="Rename" Click="Rename_Click" Text="Rename"></MenuFlyoutItem>
                                            </MenuFlyout>
                                        </winui:TabViewItem.ContextFlyout>
                                        <winui:TabViewItem.HeaderTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal" Spacing="0" Padding="0" Margin="0" ToolTipService.ToolTip="{Binding File.Path}">
                                                    <TextBlock FontWeight="{Binding IsRoot, Converter={StaticResource BoolToFontWeight}}" FontFamily="Segoe" Visibility="{Binding IsChanged, Converter={StaticResource BoolToVisibility}}" Text="*"></TextBlock>
                                                    <TextBlock FontWeight="{Binding IsRoot, Converter={StaticResource BoolToFontWeight}}" FontFamily="Segoe" Text="{Binding FileName}"></TextBlock>

                                                </StackPanel>
                                            </DataTemplate>
                                        </winui:TabViewItem.HeaderTemplate>
                                        <winui:TabViewItem.IconSource>
                                            <winui:SymbolIconSource Symbol="Document"/>
                                        </winui:TabViewItem.IconSource>
                                        <!--<contr:TabViewItem.Content>
                                <Grid>
                                    <Grid VerticalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>

                                        <monaco:CodeEditor ReadOnly="{Binding IsLogFile, Mode=OneWay}" Options="{Binding Source={StaticResource VM}, Path=EditorOptions, Mode=OneWay}" Grid.Row="0" RequestedTheme="{Binding Source={StaticResource VM}, Path=Default.Theme, Mode=OneWay, Converter={StaticResource StringToTheme}}" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"   x:Name="Edit" Text="{Binding FileContent, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CodeLanguage="{Binding FileLanguage, Mode=OneWay}">

                                            <monaco:CodeEditor.KeyboardAccelerators>
                                                <KeyboardAccelerator x:Name="ControlEnter" Key="F1" Modifiers="Control" Invoked="ControlEnter_Invoked" ></KeyboardAccelerator>
                                            </monaco:CodeEditor.KeyboardAccelerators>
                                        </monaco:CodeEditor>
                                        <Rectangle Grid.Row="0" Height="1" Width="1" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="{StaticResource SystemChromeMediumColor}"></Rectangle>

                                        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
                                            <TextBlock Text="R: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                            <TextBlock MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionLineNumber}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                            <TextBlock Margin="5,0,0,0" Text="C: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                            <TextBlock MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionColumn}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </contr:TabViewItem.Content>-->
                                        <winui:TabViewItem.ContentTemplate>
                                            <DataTemplate x:DataType="models:FileItem">
                                                <Grid VerticalAlignment="Stretch">

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"></RowDefinition>
                                                        <RowDefinition Height="Auto"></RowDefinition>
                                                    </Grid.RowDefinitions>
                                                    <!--<ScrollViewer>
                                            <TextBlock IsTextSelectionEnabled="True" ScrollViewer.VerticalScrollBarVisibility="Visible" TextWrapping="WrapWholeWords" Grid.Row="0" Text="{Binding FileContent, Mode=OneWay}"></TextBlock>
                                            </ScrollViewer>-->
                                                    <monaco:CodeEditor  Options="{Binding Source={StaticResource VM}, Path=EditorOptions, Mode=OneWay}" Grid.Row="0" RequestedTheme="{Binding Source={StaticResource VM}, Path=Default.Theme, Mode=OneWay, Converter={StaticResource StringToTheme}}" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" Loading="Edit_Loading"  x:Name="Edit" Text="{Binding FileContent, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CodeLanguage="{Binding FileLanguage, Mode=OneWay}">
                                                        <animations:Implicit.ShowAnimations>
                                                            <animations:TranslationAnimation Duration="0:0:0.25" From="0, -50, 0" To="0" ></animations:TranslationAnimation>
                                                            <animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
                                                        </animations:Implicit.ShowAnimations>
                                                    </monaco:CodeEditor>
                                                    <Rectangle Grid.Row="0" Height="1" Width="1" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="{ThemeResource SystemControlBackgroundAltHighBrush}"></Rectangle>

                                                    <Grid Visibility="{Binding Source={StaticResource VM}, Path=IsFileItemLoaded, Converter={StaticResource BoolToVisibility}}" Grid.Row="1" Background="{ThemeResource SystemControlBackgroundAltHighBrush}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="1" Text="R: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                                        <TextBlock Grid.Column="2" MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionLineNumber}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                                        <TextBlock Grid.Column="3" Margin="5,0,0,0" Text="C: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                                        <TextBlock Grid.Column="4" MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionColumn}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                                    </Grid>
                                                </Grid>
                                            </DataTemplate>
                                        </winui:TabViewItem.ContentTemplate>

                                    </winui:TabViewItem>
                                </DataTemplate>
                            </winui:TabView.TabItemTemplate>
                        </winui:TabView>
                        <Rectangle Grid.Row="3" Height="1" Width="1" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="{StaticResource SystemChromeMediumColor}"></Rectangle>
                    </Grid>
                    <toolkit:GridSplitter Grid.Column="1" Width="6" Visibility="{Binding Default.InternalViewer, Converter={StaticResource BoolToVisibility}}"/>
                    <Grid x:Name="ViewerGrid" Grid.Column="2"  Visibility="{Binding Default.InternalViewer, Converter={StaticResource BoolToVisibility}}">
                        <animations:Implicit.ShowAnimations>
                            <animations:TranslationAnimation Duration="0:0:0.25" From="50, 0, 0" To="0" ></animations:TranslationAnimation>
                            <animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
                        </animations:Implicit.ShowAnimations>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <!--<RowDefinition Height="*" />-->
                        </Grid.RowDefinitions>
                        <WebView Grid.Row="0" Visibility="{Binding Default.InternalViewer, Converter={StaticResource BoolToVisibility}}" x:FieldModifier="public" NewWindowRequested="PDFReader_NewWindowRequested" x:Name="PDFReader" Source="ms-appx-web:///web/viewer.html" ScriptNotify="PDFReader_ScriptNotify"  DefaultBackgroundColor="Transparent" ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.IsZoomChainingEnabled="False" ScrollViewer.IsScrollInertiaEnabled="False" ScrollViewer.IsVerticalRailEnabled="False" ScrollViewer.HorizontalScrollMode="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  Margin="0"></WebView>
                       
                    </Grid>
                </Grid>
                <toolkit:GridSplitter Grid.Row="1" Visibility="{Binding Default.ShowLog, Converter={StaticResource BoolToVisibility}}"/>

                <Grid Tag="LogGrid" Grid.Row="2" Visibility="{Binding Default.ShowLog, Converter={StaticResource BoolToVisibility}}" Style="{StaticResource GridCell}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <animations:Implicit.ShowAnimations>
                        <animations:TranslationAnimation Duration="0:0:0.25" From="0, 50, 0" To="0" ></animations:TranslationAnimation>
                        <animations:OpacityAnimation Duration="0:0:0.25" From="0" To="1.0"></animations:OpacityAnimation>
                    </animations:Implicit.ShowAnimations>

                    <TextBlock x:Uid="Log" FontWeight="Bold" Text="Log" VerticalAlignment="Center" />
                    <ScrollViewer x:Name="logscroll" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                        <RichTextBlock helpers:RichTextBlockHelper.Text="{Binding Blocks, Mode=TwoWay}"  FontFamily="Segoe MDL2 Assets" IsTextSelectionEnabled="True" TextWrapping="NoWrap" x:Name="Log" Padding="0,0,0,0"></RichTextBlock>
                    </ScrollViewer>
                    <Button Click="ClearLog_Click" HorizontalAlignment="Right">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal" >
                                <SymbolIcon Symbol="Delete"></SymbolIcon>
                                <TextBlock x:Uid="Clear" Text="Clear" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </Grid>
            </Grid>
        </Grid>
        <ContentDialog MinWidth="500" x:Name="AboutDialog" PrimaryButtonText="Close" DefaultButton="Primary">
            <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical">
                    <TextBlock Margin="0,6,0,0" Style="{ThemeResource SubheaderTextBlockStyle}" Text="ConTeXt IDE"></TextBlock>
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" FontSize="20" Text="About"></TextBlock>
                    <TextBlock x:Name="Version" Style="{ThemeResource BodyTextBlockStyle}" Text=""></TextBlock>
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="by wdev (wdev@outlook.de)"></TextBlock>
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="This application is not related to Pragma ADE"></TextBlock>
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" FontSize="20" Text="Dependencies and references"></TextBlock>
                    <HyperlinkButton Content="LuaMetaTeX (Pragma ADE)" NavigateUri="http://www.pragma-ade.nl/"></HyperlinkButton>
                    <HyperlinkButton Content="monaco-editor (Microsoft Corporation)" NavigateUri="https://github.com/Microsoft/monaco-editor"></HyperlinkButton>
                    <HyperlinkButton Content="MonacoEditorComponent (hawkerm)" NavigateUri="https://github.com/hawkerm/monaco-editor-uwp"></HyperlinkButton>
                    <HyperlinkButton Content="PDF.js (Mozilla)" NavigateUri="https://github.com/mozilla/pdf.js/"></HyperlinkButton>
                    <Button Click="Disclaimer_Click" Content="Show legal disclaimer" Margin="0,10,0,0"></Button>
                    <WebView Visibility="Collapsed"  x:Name="DisclaimerView" Height="5000" DefaultBackgroundColor="#88FFFFFF" Source="ms-appx-web:///web/About.html"></WebView>
                </StackPanel>
            </ScrollViewer>
        </ContentDialog>
    </Grid>
</Page>