<Page
    x:Class="ConTeXt_UWP.Editor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ConTeXt_UWP"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:monaco="using:Monaco"
    mc:Ignorable="d"
    xmlns:contr="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    Background="Transparent" DataContext="{x:Bind currentViewModel}"
    Name="EditorPage"
    >
    <Page.Resources>
        <!--<SolidColorBrush x:Key="ApplicationPageBackgroundThemeBrush" Color="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>-->
        <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
            <Setter Property="TextWrapping" Value="WrapWholeWords"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="FontStyle" Value="Normal"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBoxSelectable">
            <Setter Property="IsTextSelectionEnabled" Value="True"></Setter>
        </Style>
    </Page.Resources>

    <!--DataContext="{Binding RelativeSource={RelativeSource Self}}"-->
    <Grid AllowDrop="True" DragOver="OnFileDragOver" DragLeave="OnFileDragLeave" Drop="OnFileDrop" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="4"/>
            <ColumnDefinition Width="{Binding Default.InternalViewer, Converter={StaticResource BoolToWidth}, Mode=OneWay}">
            </ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="4"/>
            <RowDefinition MaxHeight="500" Height="{Binding Default.ShowLog, Converter={StaticResource BoolToWidth}, Mode=OneWay}"/>
        </Grid.RowDefinitions>

        <Grid Name="editgrid" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="10"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <!--<RowDefinition Height="*"></RowDefinition>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Visibility="{Binding IsProjectLoaded, Mode=OneWay}" ColumnSpacing="6" Grid.Row="0" HorizontalAlignment="Stretch" Background="Transparent"  Height="40"  Margin="6,-4,6,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!--<AppBarButton AccessKey="R" Icon="Play" Name="btncompile" Height="40" Click="Btncompile_Click" ToolTipService.ToolTip="Compile Main file">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator 
        Modifiers="Control" 
        Key="B" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>-->
                <Button Grid.Column="0" Visibility="{Binding IsFileItemLoaded, Converter={StaticResource BoolToVisibility}}" ToolTipService.ToolTip="Save &amp; Compile current file" IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" Style="{ThemeResource ButtonRevealStyle}" Click="Btncompile_Click" >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <SymbolIcon Symbol="Play"></SymbolIcon>
                            <TextBlock x:Uid="Current" Text="Current" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Grid.Column="1" Visibility="{Binding CurrentProject.RootFile, Converter={StaticResource StringToVisibility}}" ToolTipService.ToolTip="Save &amp; Compile root file" IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" Style="{ThemeResource ButtonRevealStyle}" Click="Btncompileroot_Click" >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <SymbolIcon Symbol="Play"></SymbolIcon>
                            <TextBlock x:Uid="Root" Text="Root" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Grid.Column="2"  ToolTipService.ToolTip="Select compile modes" Visibility="{Binding Default.UseModes,Mode=OneWay}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE70D;"></FontIcon>
                            <TextBlock x:Uid="Modes" Text="Modes" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                        </StackPanel>
                       
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel Spacing="6">
                                <Button  ToolTipService.ToolTip="Add a Mode" Click="addMode_Click">
                                    <Button.Content>
                                        <StackPanel Orientation="Horizontal" Spacing="4">
                                        <SymbolIcon Symbol="Add"></SymbolIcon>
                                            <TextBlock x:Uid="Addmode" Text="Add mode" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                                        </StackPanel>
                                    </Button.Content>
                                </Button>
                                <ListView SelectionMode="None" ItemsSource="{Binding CurrentProject.Modes}" >
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected, Mode=TwoWay}" Checked="CheckBox_Checked">
                                                <CheckBox.ContextFlyout>
                                                    <MenuFlyout>
                                                        <MenuFlyoutItem x:Uid="Reemovemode" x:Name="RemoveMode" Icon="Delete" Click="RemoveMode_Click" Text="Remove mode"></MenuFlyoutItem>
                                                        
                                                    </MenuFlyout>
                                                </CheckBox.ContextFlyout>
                                            </CheckBox>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <Button Grid.Column="3" Visibility="{Binding IsFileItemLoaded, Converter={StaticResource BoolToVisibility}}" IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" Name="btnsave" Style="{ThemeResource ButtonRevealStyle}" Click="Btnsave_Click" ToolTipService.ToolTip="Save current file">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <SymbolIcon Symbol="Save"></SymbolIcon>
                            <TextBlock x:Uid="Save" Text="Save" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Grid.Column="4" Visibility="{Binding IsFileItemLoaded, Converter={StaticResource BoolToVisibility}}" IsEnabled="{Binding IsSaving, Converter={StaticResource BoolInverter}}" Name="btnsaveall" Style="{ThemeResource ButtonRevealStyle}" Click="btnsaveall_Click" ToolTipService.ToolTip="Save all opened files">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <SymbolIcon Symbol="Save"></SymbolIcon>
                            <TextBlock x:Uid="Saveall" Text="Save all" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                        </StackPanel>
                    </Button.Content>
                </Button>
                
                <Button Grid.Column="6" ToolTipService.ToolTip="Open a Manual">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <SymbolIcon Symbol="Help"></SymbolIcon>
                            <TextBlock x:Uid="Help" Text="Help" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                        </StackPanel>

                    </Button.Content>
                    <Button.Flyout>
                        <Flyout>
                            <ListView  SelectionMode="None" IsItemClickEnabled="True" ItemClick="Help_ItemClick" ItemsSource="{Binding HelpFiles}" >
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="0,0,0,6" Spacing="0">
                                            <TextBlock Text="{Binding FriendlyName}" Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
                                            <TextBlock Text="{Binding FileName}" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <!--<AppBarButton IsEnabled="{Binding 
                Saving}" Icon="OpenFile" Name="btnopen" Height="40" Click="Btnopen_Click"></AppBarButton>-->

                <!--<ComboBox BorderThickness="0" Height="{x:Bind btncompile.Height}" VerticalContentAlignment="Stretch" VerticalAlignment="Center" ItemsSource="{Binding ModeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Mode"  Width="150" SelectionChanged="ComboBox_SelectionChanged" FontFamily="Segoe UI">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Command}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>-->
            </Grid>
            <Grid Grid.Row="1">
               
            </Grid>
                <contr:ProgressBar Margin="6,0,6,0" Grid.Row="2" VerticalAlignment="Center" Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibility}}" ShowPaused="{Binding IsPaused}" HorizontalAlignment="Stretch"  IsIndeterminate="True" ShowError="{Binding IsError}">
                <animations:Implicit.ShowAnimations>
                    <!--<animations:TranslationAnimation Duration="0:0:0.75" From="0, -20, 0" To="0" ></animations:TranslationAnimation>-->
                    <animations:OpacityAnimation Duration="0:0:0.75" From="0" To="1"></animations:OpacityAnimation>
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <!--<animations:TranslationAnimation Duration="0:0:0.75" From="0, 0, 0" To="-20" ></animations:TranslationAnimation>-->
                    <animations:OpacityAnimation Duration="0:0:0.75" From="1" To="0"></animations:OpacityAnimation>
                </animations:Implicit.HideAnimations>
            </contr:ProgressBar>

            <Grid Margin="6,6,6,0" Padding="6,6,6,6" CornerRadius="2" Background="#33fff700" ColumnSpacing="6" x:Name="ErrorGrid" Grid.Row="3" Visibility="{Binding IsError, Converter={StaticResource BoolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" ColumnSpacing="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Lua error:" Visibility="{Binding ConTeXtErrorMessage.lastluaerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding ConTeXtErrorMessage.lastluaerror}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lastluaerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="TeX error:" Visibility="{Binding ConTeXtErrorMessage.lasttexerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ConTeXtErrorMessage.lasttexerror}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lasttexerror, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Error at:" Visibility="{Binding ConTeXtErrorMessage.lastcontext, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding ConTeXtErrorMessage.lastcontext}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lastcontext, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="TeX error help:" Visibility="{Binding ConTeXtErrorMessage.lasttexhelp, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding ConTeXtErrorMessage.lasttexhelp}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.lasttexhelp, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                </Grid>
                <Grid Grid.Column="1" ColumnSpacing="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Text="File:"></TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding ConTeXtErrorMessage.filename}" IsTextSelectionEnabled="True"></TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Line number:"></TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ConTeXtErrorMessage.linenumber}" IsTextSelectionEnabled="True"></TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Lua error line:" Visibility="{Binding ConTeXtErrorMessage.luaerrorline, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding ConTeXtErrorMessage.luaerrorline}" IsTextSelectionEnabled="True" Visibility="{Binding ConTeXtErrorMessage.luaerrorline, Converter={StaticResource ErrorStringToVisibilityConverter}}"></TextBlock>
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Offset:"></TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding ConTeXtErrorMessage.offset}" IsTextSelectionEnabled="True"></TextBlock>
                </Grid>
            </Grid>

            <!--<ListView  Width="100" ItemsSource="{Binding LineNumberList}"   Grid.Row="1" Name="LineNumbers" ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding}"></TextBlock>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>-->
            <contr:TabView  x:Name="Tabs" Grid.Row="4" RequestedTheme="{Binding Default.Theme, Mode=OneWay, Converter={StaticResource StringToTheme}}"
                       TabWidthMode="Compact"  IsAddTabButtonVisible="False" CacheMode="BitmapCache"
                      CloseButtonOverlayMode="Always" SelectionChanged="Tabs_SelectionChanged"
                   TabCloseRequested="Tabs_TabCloseRequested" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"
                      CanDragTabs="True" Background="Transparent"
                      CanReorderTabs="True" TabItemsSource="{Binding FileItems}" SelectedItem="{Binding CurrentFileItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      AllowDrop="True" FontFamily="Segoe">
                <contr:TabView.Resources>
                    <!--<SolidColorBrush x:Key="TabViewItemHeaderBackgroundSelected"
                             Color="{StaticResource SystemChromeMediumColor}" />
                    <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPointerOver"
                             Color="{StaticResource SystemChromeMediumLowColor}" />
                    <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPressed"
                             Color="{StaticResource SystemChromeMediumLowColor}" />-->
                    <x:Double x:Key="TabViewItemHeaderMinHeight">32</x:Double>
                    <x:Double x:Key="TabViewItemHeaderMinWidth">90</x:Double>
                    <x:Double x:Key="TabViewItemHeaderMaxWidth">200</x:Double>
                </contr:TabView.Resources>
                <contr:TabView.TabItemTemplate>
                    <DataTemplate x:DataType="local:FileItem">
                        <contr:TabViewItem Content="{Binding}">
                            <contr:TabViewItem.HeaderTemplate>
                                <DataTemplate>
                                <StackPanel Orientation="Horizontal" Spacing="0" Padding="0" Margin="0" ToolTipService.ToolTip="{Binding File.Path}">
                                    <TextBlock FontWeight="{Binding IsRoot, Converter={StaticResource BoolToFontWeight}}" FontFamily="Segoe" Visibility="{Binding IsChanged, Converter={StaticResource BoolToVisibility}}" Text="*"></TextBlock>
                                    <TextBlock FontWeight="{Binding IsRoot, Converter={StaticResource BoolToFontWeight}}" FontFamily="Segoe" Text="{Binding FileName}"></TextBlock>
                                   
                                </StackPanel></DataTemplate>
                            </contr:TabViewItem.HeaderTemplate>
                            <contr:TabViewItem.IconSource>
                                <contr:SymbolIconSource Symbol="Document"/>
                            </contr:TabViewItem.IconSource>
                            <!--<contr:TabViewItem.Content>
                                <Grid>
                                    <Grid VerticalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>

                                        <monaco:CodeEditor ReadOnly="{Binding IsLogFile, Mode=OneWay}" Options="{Binding Source={StaticResource VM}, Path=EditorOptions, Mode=OneWay}" Grid.Row="0" RequestedTheme="{Binding Source={StaticResource VM}, Path=Default.Theme, Mode=OneWay, Converter={StaticResource StringToTheme}}" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"   x:Name="Edit" Text="{Binding FileContent, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CodeLanguage="{Binding FileLanguage, Mode=OneWay}">

                                            <monaco:CodeEditor.KeyboardAccelerators>
                                                <KeyboardAccelerator x:Name="ControlEnter" Key="F1" Modifiers="Control" Invoked="ControlEnter_Invoked" ></KeyboardAccelerator>
                                            </monaco:CodeEditor.KeyboardAccelerators>
                                        </monaco:CodeEditor>
                                        <Rectangle Grid.Row="0" Height="1" Width="1" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="{StaticResource SystemChromeMediumColor}"></Rectangle>

                                        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
                                            <TextBlock Text="R: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                            <TextBlock MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionLineNumber}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                            <TextBlock Margin="5,0,0,0" Text="C: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                            <TextBlock MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionColumn}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </contr:TabViewItem.Content>-->
                            <contr:TabViewItem.ContentTemplate>
                                <DataTemplate x:DataType="local:FileItem">
                                    <Grid>
                                        <Grid VerticalAlignment="Stretch">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <!--<ScrollViewer>
                                            <TextBlock IsTextSelectionEnabled="True" ScrollViewer.VerticalScrollBarVisibility="Visible" TextWrapping="WrapWholeWords" Grid.Row="0" Text="{Binding FileContent, Mode=OneWay}"></TextBlock>
                                            </ScrollViewer>-->
                                            <monaco:CodeEditor  Options="{Binding Source={StaticResource VM}, Path=EditorOptions, Mode=OneWay}" Grid.Row="0" RequestedTheme="{Binding Source={StaticResource VM}, Path=Default.Theme, Mode=OneWay, Converter={StaticResource StringToTheme}}" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" Loading="Edit_Loading"  x:Name="Edit" Text="{Binding FileContent, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CodeLanguage="{Binding FileLanguage, Mode=OneWay}">

                                            </monaco:CodeEditor>
                                            <Rectangle Grid.Row="0" Height="1" Width="1" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="{StaticResource SystemChromeMediumColor}"></Rectangle>

                                            <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
                                                <TextBlock Text="R: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                                <TextBlock MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionLineNumber}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                                <TextBlock Margin="5,0,0,0" Text="C: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                                <TextBlock MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionColumn}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </contr:TabViewItem.ContentTemplate>
                           
                        </contr:TabViewItem>
                    </DataTemplate>
                </contr:TabView.TabItemTemplate>
            </contr:TabView>
            <!--<Grid Grid.Row="5" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid x:Name="EditorGrid"  Grid.Row="0">
                --><!--<monaco:CodeEditor Options="{Binding EditorOptions, Mode=OneWay}" RequestedTheme="{Binding Default.Theme, Mode=OneWay, Converter={StaticResource StringToTheme}}" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"   x:Name="Edit" Loading="Edit_Loading" Text="{Binding CurrentFileItem.FileContent,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CodeLanguage="{Binding CurrentFileItem.FileLanguage, Mode=OneWay}">

                    <monaco:CodeEditor.KeyboardAccelerators>
                        <KeyboardAccelerator x:Name="ControlEnter" Key="F1" Modifiers="Control" Invoked="ControlEnter_Invoked" ></KeyboardAccelerator>
                    </monaco:CodeEditor.KeyboardAccelerators>
                </monaco:CodeEditor>--><!--
                   
                </Grid>
                 <Rectangle Grid.Row="0" Height="1" Width="1" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="{StaticResource SystemChromeMediumColor}"></Rectangle>

                <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
                    <TextBlock Text="R: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                    <TextBlock MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionLineNumber}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                    <TextBlock Margin="5,0,0,0" Text="C: " FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                    <TextBlock MinWidth="30" Text="{Binding ElementName=Edit, Mode=OneWay, Path=SelectedRange.PositionColumn}" FontFamily="Segoe" HorizontalAlignment="Right"></TextBlock>
                </StackPanel>
            </Grid>-->

        </Grid>
        <controls:GridSplitter Visibility="{Binding Default.InternalViewer, Converter={StaticResource BoolToVisibility},Mode=OneWay}"
        Width="4" CursorBehavior="ChangeOnSplitterHover"
        Background="{ThemeResource LogAcrylicBrush}"
        GripperCursor="SizeWestEast" FocusVisualPrimaryBrush="DarkGray" FocusVisualSecondaryBrush="LightGray"
        HorizontalAlignment="Left"
        Grid.Column="1" Grid.Row="0"
        ResizeDirection="Columns"
        ResizeBehavior="PreviousAndNext"
        GripperForeground="{ThemeResource ContentAcrylicBrush}" >
        </controls:GridSplitter>
        
        <Grid Grid.Column="2"  Grid.Row="0" Name="pdfview"  Visibility="{Binding Default.InternalViewer, Converter={StaticResource BoolToVisibility},Mode=OneWay}">
            <Image Name="PdfImage" Grid.Row="0" Margin="0"></Image>
            <WebView x:FieldModifier="public" Loading="PDFReader_Loading" NewWindowRequested="PDFReader_NewWindowRequested" x:Name="PDFReader" Source="ms-appx-web:///web/viewer.html" ScriptNotify="PDFReader_ScriptNotify"  DefaultBackgroundColor="Transparent" ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.IsZoomChainingEnabled="False" ScrollViewer.IsScrollInertiaEnabled="False" ScrollViewer.IsVerticalRailEnabled="False" Grid.Row="0" Margin="0"></WebView>
        </Grid>

        <controls:GridSplitter
        Height="4" CursorBehavior="ChangeOnSplitterHover"
        Background="{ThemeResource LogAcrylicBrush}"
        GripperCursor="SizeNorthSouth" FocusVisualPrimaryBrush="DarkGray" FocusVisualSecondaryBrush="DarkGray"
        HorizontalAlignment="Stretch" Visibility="{Binding Default.ShowLog, Converter={StaticResource BoolToVisibility}}"
         Grid.Column="0"  Grid.ColumnSpan="3" Grid.Row="1"
        ResizeDirection="Rows"
        ResizeBehavior="PreviousAndNext"
        GripperForeground="{ThemeResource ContentAcrylicBrush}" >
        </controls:GridSplitter>

        <Grid Tag="LogView" Grid.Row="2" Grid.ColumnSpan="3" Visibility="{Binding Default.ShowLog, Converter={StaticResource BoolToVisibility}}" x:FieldModifier="public" x:Name="logview" Background="{ThemeResource LogAcrylicBrush}" Padding="15,0,15,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="203*"/>
                <ColumnDefinition Width="277*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="Log" Padding="0,0,0,0" VerticalAlignment="Center" FontFamily="Segoe UI" Grid.ColumnSpan="2" Margin="15,0,15,0"/>
            <ScrollViewer x:Name="logscroll" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Padding="0,0,0,0" Margin="15,0,15,0.4" FontFamily="Segoe MDL2 Assets" Grid.ColumnSpan="2">
                <RichTextBlock Loaded="Log_Loaded" Loading="Log_Loading" local:RichTextBlockHelper.Text="{Binding Blocks, Mode=TwoWay}"  FontFamily="Segoe MDL2 Assets" IsTextSelectionEnabled="True" TextWrapping="NoWrap" x:Name="Log" Padding="0,0,0,0">

                </RichTextBlock>
            </ScrollViewer>
            <CommandBar Background="Transparent" IsOpen="False" DefaultLabelPosition="Right" Grid.ColumnSpan="2" Margin="15,0,15,0" VerticalAlignment="Center">
                <AppBarButton Icon="Clear" Label="Clear" x:Name="ClearLog" Click="ClearLog_Click"/>
            </CommandBar>
        </Grid>
    </Grid>
</Page>
